@import 'variables';

.glitch {
  animation: glitch 2s infinite linear alternate-reverse;
}

//Animation Keyframes
@keyframes glitch {
  0%   { clip: rect( 31px, 9999px,  94px, 0) }
  10%  { clip: rect(112px, 9999px, 156px, 0) }
  20%  { clip: rect( 65px, 9999px,  77px, 0) }
  30%  { clip: rect(257px, 9999px, 290px, 0) }
  40%  { clip: rect( 64px, 9999px, 138px, 0) }
  50%  { clip: rect( 31px, 9999px,  55px, 0) }
  60%  { clip: rect( 59px, 9999px,  84px, 0) }
  70%  { clip: rect( 34px, 9999px, 115px, 0) }
  80%  { clip: rect(193px, 9999px, 276px, 0) }
  90%  { clip: rect( 98px, 9999px, 129px, 0) }
  100% { clip: rect(202px, 9999px, 284px, 0) }
}

/*
Glitchy Text from https://css-tricks.com/glitch-effect-text-images-svg/

    (TEXT) PARAMS
    =================
    1. Namespace
    2. Intensity
    3. Text color
    4. Background color (flat)
    5. Highlight #1 color
    6. Highlight #2 color
    7. Width (px)
    8. Height (px)
  */

@mixin textGlitch($name, $intensity, $textColor, $background, $highlightColor1, $highlightColor2, $width, $height) {
  
  position: relative;
  color: $textColor;
  $steps: $intensity;

  // Ensure the @keyframes are generated at the root level
  @at-root {
    // We need two different ones
    @for $i from 1 through 2 {
      @keyframes #{$name}-anim-#{$i} {
        @for $i from 0 through $steps {
          #{percentage($i*(1/$steps))} {
            clip: rect(
              random($height)+px,
              $width+px,
              random($height)+px,
              0
            );
          }
        }
      }
    }
  }
  &:before,
  &:after {
    content: attr(data-text);
    position: absolute;
    background: $background;
    width: 100%;
    height: 90%;
    top: -2px;
    left: -2px;
    border: 4px solid transparent;
    box-shadow:inset 0px 0px 0px 2px #333;
    // transform: skewX(-5deg);
    padding-top: 15px;
    clip: rect(0, 0, 0, 0);
    mix-blend-mode: exclusion;
  }
  &:after {
    left: -1px;
    text-shadow: -2px 0 $highlightColor1;
    animation: #{$name}-anim-1 4s 300ms infinite ease alternate-reverse;
  }
  &:before {
    left: -1px;
    text-shadow: 1px 0 $highlightColor2;
    animation: #{$name}-anim-2 4s 300ms infinite ease alternate-reverse;
  }
}

.fourohfour-button {
  transition: box-shadow 300ms ease, transform 300ms ease;
  mix-blend-mode: exclusion;
  &:hover {
    @include textGlitch('glitch', 20, #111, #eee, #f05, #0ff, 105, 55);
    box-shadow:inset 0px 0px 0px 2px #000;
  }
}

.title:hover {
  &:before,
  &:after {
    content: '404';
    position: absolute;
    text-align: center;
    width: 100%;
    top: 0;
    left: 0;
    opacity: 0.8;
  }
  &:before {
    color: #0ff;
    z-index: -1;
  }
  &:after {
    color: #f05;
    z-index: -2;
  }
  &:hover {
        &:before {
            animation: glitchHover 1s 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) both infinite
        }
        &:after {
            animation: glitchHover 600ms cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both infinite
        }
    }
}

@keyframes glitchHover {
    0%  { transform: translate(0) }
    20% {
        transform: translate(-5px, 5px);
        transform: skewX(10deg);
    }
    40% { transform: translate(-5px, -5px); }
    60% { transform: translate(5px, 5px) }
    80% { transform: translate(5px, -5px) }
    to  { transform: translate(0) }
}
